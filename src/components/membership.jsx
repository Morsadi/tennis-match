import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import styles from '@styles/Membership.module.css';
import { usePlayers } from '@hooks/players';

export default function Membership() {
	const { getUsers, addUser, data, isLoading, message } = usePlayers();

	const [user, setUser] = useState({
		first_name: '',
		last_name: '',
		email: '',
		passcode: '',
		level: '',
		referrer: '',
	});

	const { first_name, last_name, email, passcode, level, referrer } = user;

	const saveUser = async (event) => {
		event.preventDefault();

		await addUser(user);

		// Reset user fields
		setUser({
			first_name: '',
			last_name: '',
			email: '',
			passcode: '',
			level: '',
			referrer: '',
		});
	};

	useEffect(() => {
		getUsers({ approved: true });
	}, []);

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className={styles.register}>
				<p>Players in the Team: {data.length}</p>
				<form name='' onSubmit={saveUser}>
					<label>
						<input
							type='text'
							placeholder='First Name'
							value={first_name}
							onChange={(event) => setUser({ ...user, first_name: event.target.value })}
							required
						/>
					</label>
					<label>
						<input
							type='text'
							placeholder='Last Name'
							value={last_name}
							onChange={(event) => setUser({ ...user, last_name: event.target.value })}
							required
						/>
					</label>
					<label>
						<input
							type='email'
							placeholder='Email'
							value={email}
							onChange={(event) => setUser({ ...user, email: event.target.value })}
							required
						/>
					</label>
					<label>
						<input
							type='password'
							placeholder='Passcode'
							value={passcode}
							onChange={(event) => setUser({ ...user, passcode: event.target.value })}
							required
						/>
					</label>
					<label>
						<input
							type='number'
							placeholder='Level'
							step='0.5'
							value={level}
							onChange={(event) => setUser({ ...user, level: event.target.value })}
							required
						/>
					</label>
					<label>
						<input
							type='text'
							placeholder='Referrer'
							value={referrer}
							onChange={(event) => setUser({ ...user, referrer: event.target.value })}
						/>
					</label>
					<input type='submit' disabled={isLoading} />
				</form>
				{message?.message && <p>{message?.message}</p>}
			</main>
		</>
	);
}

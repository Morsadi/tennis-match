import React, { useState } from 'react';
import Head from 'next/head';
import styles from '@styles/Admin.module.css';
import { User } from '../components/admin/user';
import { usePlayers } from '@hooks/players';
import { useEffect } from 'react';

export default function Admin() {
	const [updating, setUpdating] = useState(false);
	const [newPlayers, setNewPlayers] = useState([]);
	const { getUsers, deleteUser, updateUser, data, isLoading, error } = usePlayers();

	// Example usage for getting users

	useEffect(() => {
		getUsers({level: {$gte: 2}}, {}, {level: -1});
	}, []);

	const updateUserHandler = async (_id, actionData) => {
		await updateUser(_id, actionData);
	};
	const deleteUserHandler = async (_id) => {
		await deleteUser(_id);
	};

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className={styles.players}>
				{isLoading ? (
					<p>Loading...</p>
				) : error ? (
					<p>There has been a server issue.</p>
				) : (
					<div className='result'>
						<div>
							{data
								?.filter((player) => !player.approved)
								.map((user, i) => (
									<User
										key={`${user._id}-${i}`}
										updateUserHandler={updateUserHandler}
										deleteUserHandler={deleteUserHandler}
										user={user}
									/>
								))}
						</div>
						<div>
							{data
								?.filter((player) => player.approved)
								.map((user, i) => (
									<User
										key={`${user._id}-${i}`}
										updateUserHandler={updateUserHandler}
										deleteUserHandler={deleteUserHandler}
										user={user}
									/>
								))}
						</div>
					</div>
				)}
			</main>
		</>
	);
}
